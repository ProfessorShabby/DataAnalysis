# Download database file.
!wget https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DA0321EN-SkillsNetwork/LargeData/m4_survey_data.sqlite

# Connect to the database.
import sqlite3
conn = sqlite3.connect("m4_survey_data.sqlite") # open a database connection

# Import pandas module.
import pandas as pd
import matplotlib.pyplot as plt
%matplotlib inline
import seaborn as sns

# Plot a histogram of ConvertedComp.
Query = '''select ConvertedComp from master
'''
df = pd.read_sql_query(Query,conn)
sns.histplot(data = df)

# Plot a box plot of Age.
Query = '''select Age from master
'''
df2 = pd.read_sql_query(Query,conn)
sns.boxplot(data = df2)

# Create a scatter plot of Age and WorkWeekHrs.
Query2 = '''select Age, WorkWeekHrs from master'''
​
df = pd.read_sql_query(Query2,conn)
sns.scatterplot(y = 'WorkWeekHrs', x = 'Age', data = df)

# Create a bubble plot of WorkWeekHrs and CodeRevHrs, use Age column as bubble size.
Query3 = '''select Age, WorkWeekHrs, CodeRevHrs from master'''
​df = pd.read_sql_query(Query3,conn)
sns.scatterplot(y = 'WorkWeekHrs', x = 'CodeRevHrs', size = 'Age', hue = 'Age', alpha = 0.5, data = df, sizes = (10 , 500))

# Create a pie chart of the top 5 databases that respondents wish to learn next year. Label the pie chart with database names. Display percentages of each database on the pie chart.
import matplotlib.pyplot as plt
Query4 = '''select LanguageDesireNextYear,count(LanguageDesireNextYear) from LanguageDesireNextYear GROUP BY LanguageDesireNextYear ORDER BY count(LanguageDesireNextYear) desc LIMIT 5'''

df4 = pd.read_sql_query(Query4,conn)
df4.set_index('LanguageDesireNextYear', inplace=True)
colors_list = ['gold', 'yellowgreen', 'lightcoral', 'lightskyblue', 'lightgreen']
explode_list = [0.1, 0, 0, 0, 0.1] # ratio for each continent with which to offset each wedge.

df4['count(LanguageDesireNextYear)'].plot(kind='pie',figsize=(10, 6), x = 'LanguageDesireNextYear',autopct='%1.1f%%', startangle=90,
         shadow=True,
         labels=None,         # turn off labels on pie chart
         pctdistance=1.12,    # the ratio between the center of each pie slice and the start of the text generated by autopct
         colors=colors_list,  # add custom colors
         explode=explode_list # 'explode' lowest 3 continents
        )

# scale the title up by 12% to match pctdistance
plt.title('5 databases that respondents wish to learn next year', y=1.12, fontsize = 15)
plt.axis('equal')

# add legend
plt.legend(labels=df4.index, loc='upper left', fontsize=7)
plt.show()

# Create a stacked chart of median WorkWeekHrs and CodeRevHrs for the age group 30 to 35.
Query8 = '''select WorkWeekHrs, CodeRevHrs, Age from master where Age between 30 and 35'''
​
df8 = pd.read_sql_query(Query8,conn)
dfa = df8.groupby('Age').median()
dfa.plot(kind ='bar', stacked = True)
​plt.show()

# Plot the median ConvertedComp for all ages from 45 to 60.
Query8 = '''select ConvertedComp, Age from master where Age between  45 and 60'''
​
df8 = pd.read_sql_query(Query8,conn)
dfl = df8.groupby('Age').median()
#sns.lineplot(data = dfl, x = 'Age', y= 'ConvertedComp')
​
dfl.plot(kind = 'line', color = 'green')
plt.title('ConvertedComp for all ages from 45 to 60')
plt.xlabel('Age')
plt.ylabel('ConvertedComp')
plt.show()
​
# Create a horizontal bar chart using column MainBranch.
QUERY9 = """
SELECT COUNT(MainBranch) as MainBranch
from master
group by MainBranch
"""
​
df9=pd.read_sql_query(QUERY9,conn)
​df9.plot(kind='barh', figsize=(10,6), color='lightskyblue')
​plt.show()
